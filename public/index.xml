<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A Hugo website</title>
    <link>/</link>
    <description>Recent content on A Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 May 2016 21:48:51 -0700</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>정규표현식</title>
      <link>/2020/06/09/blog-four/</link>
      <pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/09/blog-four/</guid>
      <description>오늘은 정규표현식에 대해 알아보고자 합니다. 정규표현식 (Regular Expression ; regex) 은 패턴(규칙)을 갖는 문자열의 집합을 표현하는 데에 사용합니다.
많은 프로그래밍 언어가 정규표현식 기능을 제공하고 있으나, 문법에 있어서는 프로그래밍 언어 간 차이가 있습니다. R에서 사용되는 정규표현식의 특징은 이스케이프 문자가 두번 (\\) 사용된다는 점입니다.
먼저 필요한 패키지들을 라이브러리 합니다.
library(dplyr) library(tidyverse) library(stringr) 다음으로 문자열을 생성하고 문자열의 글자 수를 확인해봅시다.
string &amp;lt;- &amp;quot;abCD가나123 \r\n\t-_,./?\\&amp;quot; nchar(string) ## [1] 20 출력 결과를 보면 문자열의 글자 수를 20이라고 한 것을 볼 수 있는데, 이는 \\를 한글자로 인식하기 때문입니다.</description>
    </item>
    
    <item>
      <title>stringr 패키지</title>
      <link>/2020/06/01/blog-three/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/01/blog-three/</guid>
      <description>오늘은 stringr 패키지의 주요 함수에 대해 알아보고자 합니다. stringr 패키지는 텍스트 데이터 전처리를 위해 필요한 함수들을 제공합니다.
stringr 패키지의 주요 함수로는 다음과 같은 작업을 할 수 있습니다.
 str_detect : 문자열이 패턴을 포함하고 있는지 확인하기 str_remove : 문자열로부터 특정 패턴을 삭제하기 str_replace : 문자열로부터 특정 패턴을 다른 패턴으로 교체하기 str_extract : 문자열로부터 특정 패턴을 추출하기 str_sub : 문자열을 인덱스로 자르기 str_c : 여러 문자열을 하나로 묶기 str_split : 문자열을 구분자를 기준으로 분리하기 str_trim : 문자열의 양 옆에 있는 공백 제거하기  먼저 필요한 패키지들을 라이브러리 합니다.</description>
    </item>
    
    <item>
      <title>ggplot2 패키지</title>
      <link>/2020/05/29/blog-two/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/29/blog-two/</guid>
      <description>오늘은 ggplot2 패키지를 활용한 데이터 시각화에 대해 알아보고자 합니다.
먼저 필요한 패키지들을 라이브러리 합니다.
# 패키지 불러오기 # library(dplyr) library(ggplot2) library(gridExtra) # 그래프 폰트 설정하기 # theme_set(theme_gray(base_family = &amp;quot;AppleGothic&amp;quot;)) # ggplot2 package 다음으로 데이터셋을 불러옵니다. 이 중 1호선부터 9호선까지의 지하철 정보만 활용하려고 합니다.
# 데이터 불러오기 # subway &amp;lt;- read.csv(file = &amp;quot;/Users/kimchaehyeong/Documents/cheche_datascience/R_Visualization/data/2018년 12월 지하철 승하차인원 데이터.csv&amp;quot;, fileEncoding = &amp;quot;EUC-KR&amp;quot;) # 1호선 ~ 9호선 지하철 정보만 추출 sw &amp;lt;- subset(subway, subway$노선명 %in% paste(1:9, &amp;quot;호선&amp;quot;, sep = &amp;quot;&amp;quot;)) 1.</description>
    </item>
    
    <item>
      <title>Correlation Analysis</title>
      <link>/2020/05/19/blog-one/</link>
      <pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/19/blog-one/</guid>
      <description>library(tidyverse) library(ggplot2) library(corrplot) # Various Scatter Plot library(psych) # Correlation Analysis 상관계수 (Correlation Coefficient) 다변수 확률변수 간의 상관관계를 숫자로 나타낸 것입니다. 보통 모상관계수는 \(\rho\), 표본상관계수는 \(r\)로 표기합니다. 표본상관계수 \(r\)의 부호는 상관관계의 방향을 나타내고, \(r\)의 크기는 상관관계의 정도를 나타냅니다.
  \(r\)의 부호 해석    \(r\) &amp;gt; 0 양의 상관관계  \(r\) &amp;lt; 0 음의 상관관계      \(r\)의 절대값 해석    0.</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>/2016/12/30/a-plain-markdown-post/</link>
      <pubDate>Fri, 30 Dec 2016 21:49:57 -0700</pubDate>
      
      <guid>/2016/12/30/a-plain-markdown-post/</guid>
      <description>This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.  There are many differences in syntax between Blackfriday&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s Markdown.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>This is a &amp;ldquo;hello world&amp;rdquo; example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/2015/07/23/hello-r-markdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/2015/07/23/hello-r-markdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>/2015/01/01/lorem-ipsum/</link>
      <pubDate>Thu, 01 Jan 2015 13:09:13 -0600</pubDate>
      
      <guid>/2015/01/01/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>
    </item>
    
  </channel>
</rss>